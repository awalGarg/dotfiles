#!/usr/bin/env python3

# filename: select-browser-profile
# author: Awal Garg <select-browser@awalgarg.me>
# license: wtfpl

import os
from pathlib import Path
from subprocess import Popen, PIPE, DEVNULL

def browser_firefox(profile_dir_path):
    return ['firefox-developer-edition', '-no-remote', '-profile', profile_dir_path]

def browser_chrome(profile_dir_path):
    return ['google-chrome-unstable', '--user-data-dir=%s' % profile_dir_path]

app_conf = {
        'menu': ['dmenu', '-i', '-p', 'select-browser-profile', '-sb', '#333', '-nb', '#222', '-l', '20', '-fn', 'Inconsolata'],
        'browsers': {
            'ff': browser_firefox,
            'gc': browser_chrome,
        },
}

PROFILES_DIR = Path(Path.home(), 'browser-profiles')

def profiles_list():
    return os.listdir(PROFILES_DIR)

def get_user_choice(items):
    menu_pipe_data = '\n'.join(items)
    user_choice = Popen(app_conf.get('menu', ['dmenu']), stdout=PIPE, stdin=PIPE).communicate(input=menu_pipe_data.encode())[0]
    return user_choice.decode().strip().split('\n')[0]

def execute(cmd):
    Popen(cmd, stdout=DEVNULL, stderr=DEVNULL)

def runner():
    profiles = profiles_list()
    choice = get_user_choice(profiles)
    if not choice:
        return

    browser_type, _ = choice.split('-', 1)
    profile_path = Path(PROFILES_DIR, choice)
    browser_cmd = app_conf['browsers'][browser_type](str(profile_path))
    execute(browser_cmd)

if __name__ == '__main__':
    runner()
